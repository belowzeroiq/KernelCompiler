#!/bin/bash

DATE=$(date +"%Y%m%d-%H%M")

make_build(){
	print "Make kernel dtb..." green
	if [ $TOOLCHAIN == proton ]; then
		export KBUILD_COMPILER_STRING=$(clang/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')
		PATH="$(pwd)/clang/bin:${PATH}"
		make O=out ARCH=arm64 $1
		make -j$(nproc --all) O=out \
				ARCH=arm64 \
				CC=clang \
				AR=llvm-ar \
				NM=llvm-nm \
				OBJCOPY=llvm-objcopy \
				OBJDUMP=llvm-objdump \
				STRIP=llvm-strip \
				CROSS_COMPILE=aarch64-linux-gnu- \
				CROSS_COMPILE_ARM32=arm-linux-gnueabi-
	fi
        print "Make kernel dtb..." green
        if [$TOOLCHAIN == azure ]; then
		export KBUILD_COMPILER_STRING=$(azure/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')
		PATH="$(pwd)/azure/bin:${PATH}"
		make O=out ARCH=arm64 $1
		make -j$(nproc --all) O=out \
				ARCH=arm64 \
				CC=clang \
				AR=llvm-ar \
				NM=llvm-nm \
				OBJCOPY=llvm-objcopy \
				OBJDUMP=llvm-objdump \
				STRIP=llvm-strip \
				CROSS_COMPILE=aarch64-linux-gnu- \
				CROSS_COMPILE_ARM32=arm-linux-gnueabi-
	fi
        print "Make kernel dtb..." green
        if [$TOOLCHAIN == dtc ]; then
		export KBUILD_COMPILER_STRING=$(dtc/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')
		PATH="$(pwd)/dtc/bin:${PATH}"
                export CROSS_COMPILE=$(pwd)/gcc64/bin/aarch64-none-linux-gnu-
		export CROSS_COMPILE_ARM32=$(pwd)/gcc32/bin/arm-none-linux-gnueabihf-
		make O=out ARCH=arm64 $1
		make -j$(nproc --all) O=out \
				ARCH=arm64 \
				CC=clang \
				AR=llvm-ar \
				NM=llvm-nm \
				OBJCOPY=llvm-objcopy \
				OBJDUMP=llvm-objdump \
				STRIP=llvm-strip \
				CROSS_COMPILE=aarch64-none-linux-gnu- \
				CROSS_COMPILE_ARM32=arm-none-linux-gnueabihf-
        fi
        print "Make kernel dtb..." green
        if [$TOOLCHAIN == gcc ]; then
                export CROSS_COMPILE=$(pwd)/gcc64/bin/aarch64-none-linux-gnu-
	        export CROSS_COMPILE_ARM32=$(pwd)/gcc32/bin/arm-none-linux-gnueabihf-
	        make O=out ARCH=arm64 $1
                make -j$(nproc --all) O=out ARCH=arm64
        fi
}

make_clean(){
	rm -rf out
}

send_msg(){
	print "${1}" green
	curl -s -X POST https://api.telegram.org/bot"${bot_token}"/sendMessage \
		-d parse_mode="Markdown" \
		-d chat_id="${chat_id}" \
		-d text="${1}"
}

send_file(){
	print "Sending file..." green
	curl -F chat_id="${chat_id}" \
		-F caption="Suit-Suit... He-He... Build Successful! | Gue Ganteng $DATE " \
		-F document=@"${1}" \
		 https://api.telegram.org/bot"${bot_token}"/sendDocument
}

mkzip(){
	print "Generate zip file..." green

	if [ -f $(pwd)/out/arch/arm64/boot/Image.gz-dtb ]; then
		cp $(pwd)/out/arch/arm64/boot/Image.gz-dtb  anykernel
		cd anykernel
		zip -r9 ../$1 * -x .git README.md *placeholder
		cd ..
		send_file $1
	else
		send_msg "Build Gagal!, Cek lagi scriptnya Woy!"
		print "Build error !" red
		exit 1
	fi
}

print(){
	echo ""
	case ${2} in
		"red")
		echo -e "\033[31m $1 \033[0m";;
		"green")
		echo -e "\033[32m $1 \033[0m";;
		*)
		echo $1
		;;
	esac
}

gen_toolchain(){
	print "Cloning toolchain files..." green
	if [ $TOOLCHAIN == "proton" ]
	then
		git clone --depth=1 https://github.com/kdrag0n/proton-clang clang
	fi
        print "Cloning toolchain files..." green
        if [ $TOOLCHAIN == "azure" ]
	then
        	git clone --depth=1 https://github.com/cbendot/azure-clang azure
        fi
        print "Cloning toolchain files..." green
        if [ $TOOLCHAIN == "dtc" ]
        then
                git clone depth=1 https://github.com/NusantaraDevs/DragonTC -b daily/10.0 dtc
                git clone depth=1 https://github.com/ramadhannangga/x86_64-aarch64-none-linux-gnu gcc64
                git clone depth=1 https://github.com/ramadhannangga/x86_64-arm-none-linux-gnueabihf gcc32
	fi
        print "Cloning toolchain files..." green
        if [ $TOOLCHAIN == "gcc" ]
        then
                git clone depth=1 https://github.com/ramadhannangga/x86_64-aarch64-none-linux-gnu gcc64
                git clone depth=1 https://github.com/ramadhannangga/x86_64-arm-none-linux-gnueabihf gcc32
        fi
		git clone --depth=1 https://github.com/cbendot/AnyKernel3 -b X00TD anykernel
}

build(){

	export type="${1} ${2} ${3}"

	make_clean
	
		if [ $2 == "-nlv" ]
	then
		make_build "${1}_defconfig"
	else
		make_build "${1}_defconfig"
	fi
		
	mkzip "$KERNELNAME-$DATE.zip"
}
